<?xml version="1.0" encoding="utf-8"?>
<!--

	Kap IT  -  Copyright 2011 Kap IT  -  All Rights Reserved.
	This component is distributed under the GNU LGPL v2.1 
	(available at : http://www.hnu.org/licences/old-licenses/lgpl-2.1.html)

-->

<!--- 
	The  skin class for the DateChooser bodyGrid SkinPart
	
	@see com.deCampredon.spark.components.DateChooser#bodyGrid
	
	@author FranÃ§ois de Campredon
-->

<s:SparkSkin 
    xmlns:fx="http://ns.adobe.com/mxml/2009" 
    xmlns:s="library://ns.adobe.com/flex/spark" 
    xmlns:mx="library://ns.adobe.com/flex/mx"
    xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
	xmlns:spark="http://francois.de-campredon.fr/spark-components"
    alpha.disabled="0.5" minWidth="89" minHeight="84" >
    
    <fx:Metadata>
    <![CDATA[
        /** 
        * @copy spark.skins.spark.ApplicationSkin#hostComponent
          @langversion 3.0
          @playerversion Flash 10
          @playerversion AIR 1.5
          @productversion Flex 4
         */
        [HostComponent("spark.components.DataGrid")]
    ]]>
    </fx:Metadata>
    
    <s:states>
        <s:State name="normal" />
        <s:State name="disabled" />
    </s:states>
    
    <fx:Declarations>
        
        <!--- Defines the value of the headerRenderer property for the columnHeaderGroup. 
              The default is spark.skins.spark.DefaultGridHeaderRenderer -->
        <fx:Component id="headerRenderer">
			<s:GridItemRenderer height="22">
				<s:Label id="labelDisplay" textAlign="center" verticalAlign="middle"  width="24" left="2"   fontWeight="bold"  verticalCenter="0" />
			</s:GridItemRenderer>
        </fx:Component>
		
		<fx:Component id="itemRenderer">
			<s:GridItemRenderer height="22" width="24" >
				<s:Label id="labelDisplay" textAlign="center" verticalAlign="middle" verticalCenter="0" width="100%" />
			</s:GridItemRenderer>
		</fx:Component>
        
        <!--- @private -->
        <fx:Component id="hoverIndicator">
            <s:Rect implements="spark.components.gridClasses.IGridVisualElement">
                <fx:Script>
                    <![CDATA[
                        import spark.components.DataGrid;
                        import spark.components.Grid;
                        
                        /**
                         * @private
                         */
                        public function prepareGridVisualElement(grid:Grid, rowIndex:int, columnIndex:int):void
                        {
                            const dataGrid:DataGrid = grid.dataGrid;
                            if (!dataGrid)
                                return;
                            
                            const color:uint = dataGrid.getStyle("rollOverColor");
                            hoverIndicatorFill.color = color;
                        }
                    ]]>
                </fx:Script>
                
                <s:fill>
                    <!--- @private -->
                    <s:SolidColor id="hoverIndicatorFill" color="0xCEDBEF"/>
                </s:fill>
				<s:stroke>
					<s:SolidColorStroke color="0x999999" />
				</s:stroke>
            </s:Rect>
        </fx:Component>
        
        
        <!--- @private -->
        <fx:Component id="selectionIndicator">
            <s:Rect implements="spark.components.gridClasses.IGridVisualElement">
                <fx:Script>
                    <![CDATA[
                        import spark.components.DataGrid;
                        import spark.components.Grid;
                        
                        /**
                         * @private
                         */
                        public function prepareGridVisualElement(grid:Grid, rowIndex:int, columnIndex:int):void
                        {
                            const dataGrid:DataGrid = grid.dataGrid;
                            if (!dataGrid)
                                return;
                            
                            const color:uint = dataGrid.getStyle("selectionColor");
                            selectionIndicatorFill.color = color;
                        }
                    ]]>
                </fx:Script>
                
                <s:fill>
                    <!--- @private -->
                    <s:SolidColor id="selectionIndicatorFill" color="0xA8C6EE"/>
                </s:fill>    
				<s:stroke>
					<s:SolidColorStroke color="0x999999" />
				</s:stroke>
            </s:Rect>
        </fx:Component>
        
       
		
		
        
    </fx:Declarations>
    
    <fx:Script fb:purpose="styling">
    <![CDATA[
        static private const exclusions:Array = [ "columnHeaderGroup"];
        
        /**
         * @private
         */
        override public function get colorizeExclusions():Array {return exclusions;}
        
        
        /**
         * @private
         */
        override protected function initializationComplete():void
        {
            useChromeColor = true;
            super.initializationComplete();
        }
        
    ]]>
    </fx:Script>
    
    <!-- column header, content -->
    <s:VGroup horizontalAlign="justify" gap="0" left="0" right="0" top="0" bottom="0">
        
        <!--- @private -->
        <s:GridColumnHeaderGroup id="columnHeaderGroup"
            paddingLeft="1" paddingTop="1" paddingRight="1" minHeight="21" 
            headerRenderer="{headerRenderer}"/>

		<s:Group width="100%">
			<spark:DateChooserGrid id="grid" itemRenderer="{itemRenderer}" left="3" right="3" top="0" bottom="3">
				<s:GridLayer name="backgroundLayer"/>
				<s:GridLayer name="todayIndicatorLayer"/>
				<s:GridLayer name="selectionLayer"/>
				<s:GridLayer name="rendererLayer"/>
				<s:GridLayer name="overlayLayer"/>
			</spark:DateChooserGrid> 
		</s:Group>
        
    </s:VGroup>
    

</s:SparkSkin>
